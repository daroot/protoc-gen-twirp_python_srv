# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: echo.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='echo.proto',
  package='example.echo',
  syntax='proto3',
  serialized_pb=_b('\n\necho.proto\x12\x0c\x65xample.echo\"\x1c\n\x0b\x45\x63hoRequest\x12\r\n\x05input\x18\x01 \x01(\t\"0\n\x10\x45\x63hoMultiRequest\x12\r\n\x05input\x18\x01 \x01(\t\x12\r\n\x05\x63ount\x18\x02 \x01(\x05\"\x1e\n\x0c\x45\x63hoResponse\x12\x0e\n\x06output\x18\x01 \x01(\t2\x95\x01\n\x04\x45\x63ho\x12?\n\x06Repeat\x12\x19.example.echo.EchoRequest\x1a\x1a.example.echo.EchoResponse\x12L\n\x0eRepeatMultiple\x12\x1e.example.echo.EchoMultiRequest\x1a\x1a.example.echo.EchoResponseB\tZ\x07\x65xampleb\x06proto3')
)




_ECHOREQUEST = _descriptor.Descriptor(
  name='EchoRequest',
  full_name='example.echo.EchoRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='input', full_name='example.echo.EchoRequest.input', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=28,
  serialized_end=56,
)


_ECHOMULTIREQUEST = _descriptor.Descriptor(
  name='EchoMultiRequest',
  full_name='example.echo.EchoMultiRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='input', full_name='example.echo.EchoMultiRequest.input', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='count', full_name='example.echo.EchoMultiRequest.count', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=58,
  serialized_end=106,
)


_ECHORESPONSE = _descriptor.Descriptor(
  name='EchoResponse',
  full_name='example.echo.EchoResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='output', full_name='example.echo.EchoResponse.output', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=108,
  serialized_end=138,
)

DESCRIPTOR.message_types_by_name['EchoRequest'] = _ECHOREQUEST
DESCRIPTOR.message_types_by_name['EchoMultiRequest'] = _ECHOMULTIREQUEST
DESCRIPTOR.message_types_by_name['EchoResponse'] = _ECHORESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

EchoRequest = _reflection.GeneratedProtocolMessageType('EchoRequest', (_message.Message,), dict(
  DESCRIPTOR = _ECHOREQUEST,
  __module__ = 'echo_pb2'
  # @@protoc_insertion_point(class_scope:example.echo.EchoRequest)
  ))
_sym_db.RegisterMessage(EchoRequest)

EchoMultiRequest = _reflection.GeneratedProtocolMessageType('EchoMultiRequest', (_message.Message,), dict(
  DESCRIPTOR = _ECHOMULTIREQUEST,
  __module__ = 'echo_pb2'
  # @@protoc_insertion_point(class_scope:example.echo.EchoMultiRequest)
  ))
_sym_db.RegisterMessage(EchoMultiRequest)

EchoResponse = _reflection.GeneratedProtocolMessageType('EchoResponse', (_message.Message,), dict(
  DESCRIPTOR = _ECHORESPONSE,
  __module__ = 'echo_pb2'
  # @@protoc_insertion_point(class_scope:example.echo.EchoResponse)
  ))
_sym_db.RegisterMessage(EchoResponse)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('Z\007example'))

_ECHO = _descriptor.ServiceDescriptor(
  name='Echo',
  full_name='example.echo.Echo',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=141,
  serialized_end=290,
  methods=[
  _descriptor.MethodDescriptor(
    name='Repeat',
    full_name='example.echo.Echo.Repeat',
    index=0,
    containing_service=None,
    input_type=_ECHOREQUEST,
    output_type=_ECHORESPONSE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='RepeatMultiple',
    full_name='example.echo.Echo.RepeatMultiple',
    index=1,
    containing_service=None,
    input_type=_ECHOMULTIREQUEST,
    output_type=_ECHORESPONSE,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_ECHO)

DESCRIPTOR.services_by_name['Echo'] = _ECHO

# @@protoc_insertion_point(module_scope)
